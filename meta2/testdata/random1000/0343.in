int id()
{
    char **id[12];

    while ((id
	    (12, 'c',
	     itoa((id),
		  !id()[!'c'] +
		  id((atoi('c')[atoi(id) < atoi('c') - 'c']) >
		     itoa(id()[atoi("str")], 12),
		     atoi(*(id < id()[id()]))) >= id)
	     || id()) / id(id(id()),
			   &id() !=
			   *id()[printf(id(('c' - printf(itoa(12, 'c')))))]
			   / id(), 'c') <= *id
	    || 12 = id("str" * id <= 12 + id(), 'c') = id && printf(12
								    || *12
								    >=
								    printf
								    (12) =
								    id()) *
	    +id && id() <= atoi(12)))
	if (id
	    ((12),
	     itoa(!id
		  [itoa
		   (id()
		    && 12, 'c' = *("str" + "str"
				   || 'c' =
				   "str"[(printf(id())
					  || "str")]) / ('c' = id
							 && id) >=
		    *-id - 'c' && id()
		    && id()) =
		   id('c' % 'c')] <= "str",
		  printf(id) / printf(id()) != id =
		  (id(12 = id)['c'[12]]) < printf(('c'))
		  && atoi(12) % printf(12[id()]) || "str" <= itoa(12
								  || id >
								  'c'
								  || id(),
								  12
								  && !12 -
								  id())),
	     id()))
	    if (atoi(id()) = id["str"] || "str")
		if ('c')
		    while (id
			   (('c') % 12 <= "str" || 12 && 12 * "str"
			    && printf(id()) % itoa('c' != id(),
						   "str")[12] = ('c')))
			return "str";
		else {
		    return 12;
	    } else
		return id(12 / 'c'
			  || "str"[+id] < -atoi(12) % 'c'[atoi(!12) + id
							  &&
							  atoi(&itoa
							       (id(),
								id()) *
							       (itoa
								("str",
								 id) ==
								(id()))) +
							  itoa(printf
							       (id *
								"str"),
							       id("str"))
							  [printf('c')]
							  &&
							  ((printf
							    ("str")))],
			  (itoa
			   (printf('c'),
			    id() - itoa(id(id()), "str") + *'c' < id
			    || 12[12] < atoi("str") =
			    atoi(id))),
			  id() !=
			  +'c' *
			  (id("str" <= atoi(itoa("str", 12 + id)) || 'c'))
			  / 'c')[id() && "str" >= 12 - id];
}
